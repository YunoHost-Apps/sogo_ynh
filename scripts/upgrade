#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
admin=$(ynh_app_setting_get --app=$app --key=admin)
is_public=$(ynh_app_setting_get --app=$app --key=is_public)
port=$(ynh_app_setting_get --app=$app --key=web_port)
smtp_port=$(ynh_app_setting_get --app=$app --key=smtp_port)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$db_name
db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
    # Restore it if the upgrade fails
    ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# UPGRADE SETTINGS FROM OLD INSTALL
#=================================================

ynh_script_progression --message="Fixing old settings..." --weight=1

if [[ ${is_public,,*} = "yes" ]]
then
    is_public=1
    ynh_app_setting_set --app $app --key is_public --value 1
fi

if [[ ${is_public,,*} = "no" ]]
then
    is_public=0
    ynh_app_setting_set --app $app --key is_public --value 0
fi

if [[ -z $port ]]
then
    # Find a port for SOGo
    port=$(ynh_find_port --port 20000)
    ynh_app_setting_set --app $app --key web_port --value $port
fi

if [[ -z $db_name ]]
then
    db_name=$app
    ynh_app_setting_set --app $app --key db_name --value $db_name
fi

if [[ -z $db_user ]]
then
    db_user=$app
    ynh_app_setting_set --app $app --key db_user --value $db_user
fi

# Manage migration form SOGo 3.x to SOGo 4.x (Debian stretch -> Buster)
ynh_script_progression --message="Migrating database if needed..."

# FIXME use the new way to manage version when available on the core
app_previous_version="$(jq -r .version /etc/yunohost/apps/$app/manifest.json | cut -d~ -f1)"
if [[ "$app_previous_version" == 3.2.* ]]; then
    ynh_replace_string --match_string __APP__ --replace_string $app --target_file migrations/3.2-4.0.sh
    ynh_replace_string --match_string __DBUSER__ --replace_string $db_user --target_file migrations/3.2-4.0.sh
    ynh_replace_string --match_string __DBPASS__ --replace_string $db_pwd --target_file migrations/3.2-4.0.sh
    bash migrations/3.2-4.0.sh
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================

# INSTALL DEPENDENCIES
ynh_script_progression --message="Upgrading dependencies..."
install_dependance

ynh_script_progression --message="Configuring application..."

# Configure SOGO
ynh_add_config --template="sogo.conf" --destination="/etc/$app/sogo.conf"

# Configure stunnel
config_stunnel

#=================================================
# SETUP A CRON
#=================================================
ynh_script_progression --message="Setuping a cron..." --weight=1

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"


#Configure Nginx
config_nginx

#=================================================
# GENERIC FINALIZATION
#=================================================

# SECURE FILES AND DIRECTORIES
ynh_script_progression --message="Protecting directory..."
set_permission

# configure the sso
ynh_script_progression --message="Configuring permissions..."

if ! ynh_permission_exists --permission sync_client; then
    ynh_permission_create --permission="sync_client" --allowed 'visitors' --auth_header=false\
        --label="Sync client" --protected=true --show_tile=false\
        --additional_urls="/Microsoft-Server-ActiveSync" "/principals" "/.well-known/caldav" "/.well-known/carddav"
    python3 remove_sso_conf_persistent.py $domain \
        || ynh_print_warn --message="Your file /etc/ssowat/""conf.json.persistent doesn't respect the json syntax. The config file wasn't cleaned. Please clean it manually."
else
    ynh_permission_update --permission="sync_client" --add='visitors' --label="Sync client" --protected=true --show_tile=false
    ynh_permission_url  --permission "sync_client" --auth_header=false\
        --add_url="/Microsoft-Server-ActiveSync" "/principals" "/.well-known/caldav" "/.well-known/carddav"
fi

# SETUP LOGROTATE
ynh_script_progression --message="Configuring log rotation..."
ynh_use_logrotate --logfile /var/log/$app/sogo.log --nonappend

# Register service
yunohost service add $app --log "/var/log/$app/sogo.log"

# Restart services
ynh_script_progression --message="Starting SOGo services..." --weight=3

systemctl restart sogo
systemctl restart stunnel4

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
